/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package joseluisespinozasanchez;

import java.sql.ResultSet;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.table.DefaultTableModel;
import conexion.Conexion;
import conexion.DataInformation;
import java.time.LocalDate;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author josel
 */
public class GestorTareasGUI extends javax.swing.JFrame implements Runnable {

    JFrame ventana = null;
    String hora,minuto,fecha;
    int dia,mes,anio;
    Calendar calendario;
    Thread fechaThread,actualizaTableThread,cmp24HThread;
    DefaultTableModel modelo;
    DataInformation objTareas;
    
    /**
     * Creates new form GestorTareasGUI
     */
    public GestorTareasGUI() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        String[] titulos={"ID","Título","Descripcion","Fecha"};
        modelo = new DefaultTableModel(null, titulos);
        tableTareas.setModel(modelo);
               
        actualizaTableThread = new Thread(this);
        actualizaTableThread.start();
        
        fechaThread = new Thread(this);
        fechaThread.start();
        
        cmp24HThread = new Thread(this);
        cmp24HThread.start();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTareas = new javax.swing.JTable();
        eliminaButton = new javax.swing.JButton();
        agregaButton = new javax.swing.JButton();
        lbReloj = new javax.swing.JLabel();
        labelTareas = new javax.swing.JLabel();
        lbTareas24h = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestor de Tareas");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(170, 120, 195));

        tableTareas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Títuto", "Descripción", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTareas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTareasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableTareas);
        if (tableTareas.getColumnModel().getColumnCount() > 0) {
            tableTareas.getColumnModel().getColumn(0).setResizable(false);
            tableTareas.getColumnModel().getColumn(1).setResizable(false);
            tableTareas.getColumnModel().getColumn(2).setResizable(false);
            tableTareas.getColumnModel().getColumn(3).setResizable(false);
        }

        eliminaButton.setBackground(new java.awt.Color(178, 80, 82));
        eliminaButton.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        eliminaButton.setForeground(new java.awt.Color(100, 8, 8));
        eliminaButton.setText("Eliminar");
        eliminaButton.setToolTipText("Seleccione en la Tabla");
        eliminaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminaButtonActionPerformed(evt);
            }
        });

        agregaButton.setBackground(new java.awt.Color(78, 180, 82));
        agregaButton.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        agregaButton.setForeground(new java.awt.Color(7, 100, 8));
        agregaButton.setText("Agregar");
        agregaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregaButtonActionPerformed(evt);
            }
        });

        lbReloj.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lbReloj.setForeground(new java.awt.Color(27, 27, 28));
        lbReloj.setText("00/00/0000  00:00");

        labelTareas.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        labelTareas.setForeground(new java.awt.Color(27, 27, 28));
        labelTareas.setText("Tareas en Proximas 24 horas:");

        lbTareas24h.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        lbTareas24h.setForeground(new java.awt.Color(27, 27, 28));
        lbTareas24h.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(eliminaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelTareas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbTareas24h, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(lbReloj))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(69, 69, 69)
                    .addComponent(agregaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(538, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(lbReloj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTareas)
                    .addComponent(lbTareas24h))
                .addGap(17, 17, 17))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addComponent(agregaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(384, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregaButtonActionPerformed
        // TODO add your handling code here:
        if(ventana == null || !ventana.isVisible()){
            ventana = new Agrega();
            ventana.setVisible(true);
        }else
            JOptionPane.showMessageDialog(null, "Hay una ventana activa", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_agregaButtonActionPerformed

    private void tableTareasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTareasMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==1){
            JTable receptor = (JTable)evt.getSource();            
            objTareas = new DataInformation();
            objTareas.setId(Integer.parseInt(receptor.getModel().getValueAt(receptor.getSelectedRow(), 0).toString()));
            objTareas.setTitulo(receptor.getModel().getValueAt(receptor.getSelectedRow(), 1).toString());
            objTareas.setDescripcion(receptor.getModel().getValueAt(receptor.getSelectedRow(), 2).toString());
            objTareas.setFecha(receptor.getModel().getValueAt(receptor.getSelectedRow(), 3).toString());
        }
    }//GEN-LAST:event_tableTareasMouseClicked

    private void eliminaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminaButtonActionPerformed
        // TODO add your handling code here:
        if(ventana == null || !ventana.isVisible()){
            Conexion objConexion = new Conexion();
            int selectedRow = tableTareas.getSelectedRow();
            if(selectedRow != -1 && objTareas != null){  //si hay una fila seleccionada
                int opcion = JOptionPane.showConfirmDialog(null,"¿Estas seguro que deseas eliminar la tarea "+ objTareas.getId()+"?","Eliminar",JOptionPane.OK_CANCEL_OPTION);
                if(opcion == JOptionPane.OK_OPTION){
                    String strSentenciaInsert = String.format("DELETE FROM Tareas WHERE ID=%d", 
                        objTareas.getId());
                    objConexion.ejecutarSentenciaSQL(strSentenciaInsert);
                    modelo.removeRow(selectedRow);  //elimina la fila del modelo
                    objTareas=null;
                }
            }else{
                JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila para eliminar.");
        }
        mostrarDatos();
        }else
            JOptionPane.showMessageDialog(null, "Hay una ventana activa", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_eliminaButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestorTareasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestorTareasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestorTareasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestorTareasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestorTareasGUI().setVisible(true);
            }
        });
    }
    
    public void mostrarDatos(){
        //limpiar la tabla cada que se hace una llamada a mostrar datos
        while(modelo.getRowCount()>0)
            modelo.removeRow(0);
        Conexion objConexion=new Conexion();
        try{
            ResultSet resultado=objConexion.consultarRegistro("SELECT * FROM Tareas");
            while(resultado.next()){
                Object[] objUsuario = {resultado.getString("ID"), resultado.getString("Titulo"), 
                    resultado.getString("Descripcion"), resultado.getString("Fecha")};
                modelo.addRow(objUsuario);
            }
        }catch(Exception e){
            System.out.println("Error de consulta "+e);
        }
    }
    
    @Override
    public void run() {
        Thread ct= Thread.currentThread();
        while (ct==fechaThread){
            calcula();
            lbReloj.setText(fecha+"  "+hora+":"+minuto);
            try{
                Thread.sleep(1000);//cadasegundo
            }catch(InterruptedException e){}
        }
        
        while (ct==actualizaTableThread){
            mostrarDatos();
            try{
                Thread.sleep(2500);//cadasegundo
            }catch(InterruptedException e){}
        }
        
        while (ct==cmp24HThread){
            try{
                Thread.sleep(10000);//cadasegundo
            }catch(InterruptedException e){}
            compurebaTareas24H();
        }
        
        
    }
    
    private void compurebaTareas24H()
    {
        int cont=0,diaAux,mesAux,anioAux;
        Conexion objConexion=new Conexion();
        try{
            ResultSet resultado=objConexion.consultarRegistro("SELECT * FROM Tareas");
            while(resultado.next()){
                LocalDate dateAux = LocalDate.parse(resultado.getString("Fecha"));
                diaAux = dateAux.getDayOfMonth();
                mesAux = dateAux.getMonthValue();
                anioAux = dateAux.getYear();
                
                //System.out.println(diaAux+" "+mesAux+" "+anioAux);
                
                if((diaAux == dia && mesAux == mes && anioAux == anio) ||(diaAux == dia+1 && mesAux == mes && anioAux == anio) ||
                        (diaAux == 1 && mesAux == mes+1 && anioAux == anio))
                    cont++;
            }
        }catch(Exception e){
            System.out.println("Error de consulta "+e);
        }
        
        if(cont>0)
        {
            lbTareas24h.setText(Integer.toString(cont));
            JOptionPane.showMessageDialog(null, cont +" tareas Pendientes en las siguientes 24 horas", "Tareas Pendientes", JOptionPane.INFORMATION_MESSAGE);
        }   
    }
    
    private void calcula() {
        calendario=new GregorianCalendar();
        Date fechaHoraActual=new Date();
        calendario.setTime(fechaHoraActual);
      
        dia = calendario.get(Calendar.DAY_OF_MONTH);
        mes = calendario.get(Calendar.MONTH) + 1;       //el mes marca un numero menor
        anio = calendario.get(Calendar.YEAR);
      
        if(dia < 10){
            if(mes < 10)
                fecha = String.format("0%d/0%d/%d", dia,mes,anio);  //si el dia y el mes son menores que 10
            else
                fecha = String.format("0%d/%d/%d", dia,mes,anio);       //si SOLO el dia es menor que 10
        }
        if(mes < 10)
            fecha = String.format("%d/0%d/%d", dia,mes,anio);       //si SOLO el mes es menor que 10
      
        hora=calendario.get(Calendar.HOUR_OF_DAY)>9?""+calendario.get
            (Calendar.HOUR_OF_DAY):"0"+calendario.get(Calendar.HOUR_OF_DAY);
    
        minuto=calendario.get(Calendar.MINUTE)>9?""+calendario.get(Calendar.MINUTE):
                "0"+calendario.get(Calendar.MINUTE);
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregaButton;
    private javax.swing.JButton eliminaButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTareas;
    private javax.swing.JLabel lbReloj;
    private javax.swing.JLabel lbTareas24h;
    private javax.swing.JTable tableTareas;
    // End of variables declaration//GEN-END:variables
}
